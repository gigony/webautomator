
//buildscript {
//
//  repositories {
//    mavenCentral()
//  }
//
//  dependencies {
////    classpath group: "net.carlosgsouza", name: "gradle-console", version: "1.+"
////      classpath 'de.undercouch:gradle-download-task:1.2'
//  }
//
//}

plugins {
    id "de.undercouch.download" version "1.2"
}

apply plugin: "idea"

allprojects {
  apply plugin: "java"
  apply plugin: 'maven'
  apply plugin: 'signing'
  group = 'unl.edu.qte'

  repositories {
    mavenCentral()
  }
}

subprojects {
  dependencies {
    testCompile group: "junit", name: "junit", version: "[4.0,)"

  }

  [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

  // force tests
  test.outputs.upToDateWhen { false }

  task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
  }

  task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
  }

  artifacts {
    archives javadocJar, sourcesJar
  }

  def isMavenDeployable = hasProperty('signing.keyId') &&
                          hasProperty('signing.password') &&
                          hasProperty('signing.secretKeyRingFile') &&
                          hasProperty('ossrhUsername') &&
                          hasProperty('ossrhPassword')

  if (isMavenDeployable) {
    signing {
      sign configurations.archives
    }

    uploadArchives {
      repositories {
        mavenDeployer {
          beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

          repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
            authentication(userName: ossrhUsername, password: ossrhPassword)
          }

          snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
            authentication(userName: ossrhUsername, password: ossrhPassword)
          }

          pom.project {
            name 'QTE'
            packaging 'jar'
            // optionally artifactId can be defined here
            description 'A Framework for Web automation and testing'
            url 'https://github.com/gigony/webautomator'

            scm {
              connection 'scm:git:git@github.com:gigony/webautomator.git'
              developerConnection 'scm:git:git@github.com:gigony/webautomator.git'
              url 'https://github.com/gigony/webautomator'
            }

            licenses {
              license {
                name 'The Apache License, Version 2.0'
                url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
              }
            }

            developers {
              developer {
                id 'gigony'
                name 'Gigon Bae'
                email 'gigony@gmail.com'
              }
            }
          }
        }
      }
    }
  }
}




//mainClassName = "edu.unl.qte.webautomator.Main"

task getHomeDir << {
    println gradle.gradleHomeDir
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}
